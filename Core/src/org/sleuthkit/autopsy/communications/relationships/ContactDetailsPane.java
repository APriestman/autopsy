/*
 * Autopsy Forensic Browser
 *
 * Copyright 2019 Basis Technology Corp.
 * Contact: carrier <at> sleuthkit <dot> org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sleuthkit.autopsy.communications.relationships;

import org.openide.explorer.ExplorerManager;
import org.openide.nodes.Node;

/**
 * Displays the propertied of a ContactNode in a PropertySheet.
 */
public final class ContactDetailsPane extends javax.swing.JPanel implements ExplorerManager.Provider {

    final private ExplorerManager explorerManager = new ExplorerManager();

    /**
     * Displays the propertied of a ContactNode in a PropertySheet.
     */
    public ContactDetailsPane() {
        initComponents();
        this.setEnabled(false);
        
        nameLabel.setText("");
    }

    /**
     * Sets the list of nodes for the property sheet.
     *
     * @param nodes List of nodes to set
     */
    public void setNode(Node[] nodes) {
        if (nodes != null && nodes.length == 1) {
            nameLabel.setText(nodes[0].getDisplayName());
            propertySheet.setNodes(nodes);
        } else {
            nameLabel.setText("");
            propertySheet.setNodes(null);
        }
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return explorerManager;
    }

    @Override
    public void setEnabled(boolean enabled) {
        super.setEnabled(enabled);
        nameLabel.setEnabled(enabled);
        propertySheet.setEnabled(enabled);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        messageContentViewer1 = new org.sleuthkit.autopsy.contentviewers.MessageContentViewer();
        nameLabel = new javax.swing.JLabel();
        propertySheet = new org.openide.explorer.propertysheet.PropertySheet();

        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, org.openide.util.NbBundle.getMessage(ContactDetailsPane.class, "ContactDetailsPane.nameLabel.text")); // NOI18N

        propertySheet.setDescriptionAreaVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(propertySheet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(propertySheet, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.sleuthkit.autopsy.contentviewers.MessageContentViewer messageContentViewer1;
    private javax.swing.JLabel nameLabel;
    private org.openide.explorer.propertysheet.PropertySheet propertySheet;
    // End of variables declaration//GEN-END:variables
}
